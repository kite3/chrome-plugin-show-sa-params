{
  "name": "ShowSaParms",
  "description": "拦截神策埋点的HTTP请求，将其入参解析出来，并以表格的形式打印在控制台",
  "version": "1.0",
  "manifest_version": 2,
  "browser_action": {
    "default_popup": "./src/popup.html"
  },
  "background": {
    "scripts": ["./dist/background.js"],
    // persistent属性定义了插件常驻后台的方式；当其值为true时，表示插件将一直在后台运行，无论其是否正在工作；当其值为false时，表示插件在后台按需运行，这就是Chrome后来提出的Event Page（非持久性后台）。Event Page是基于事件驱动运行的，只有在事件发生的时候才可以访问；这样做的目的是为了能够有效减小插件对内存的消耗，如非必要，请将persistent设置为false。
    // persistent属性的默认值为true
    "persistent": true
  },
  "content_scripts": [
    {
      // 必需。指定此内容脚本将被注入到哪些页面。
      "matches": ["*://*/*"],
      // 也可以引入node_modules中的文件，例如："./node_modules/jquery/dist/jquery.js"
      "js": ["./dist/contentScript.js"],
      "run_at": "document_end"
    }
  ],
  // 通过webRequest的API可以对浏览器发出的任何HTTP请求进行拦截、组织或者修改；可以拦截的请求还包括脚本、样式的GET请求以及图片的链接；我们也需要在manifest中配置权限才能使用API：
  // 权限中还需要声明拦截请求的URL，如果你想拦截所有的URL，可以使用*://*/*（不过不推荐这么做，数据会非常多），如果我们想以阻塞方式使用Web请求API，则需要用到webRequestBlocking权限。
  "permissions": [
    "storage",
    "activeTab",
    "https://*/",
    "http://*/",
    "webRequest",
    "webRequestBlocking"
  ]
}
